Welcome to this section

where we will at look the different storage options

for EC2 instances.

So first, the most important ones

are going to be EBS Volumes, so let's define what they are.

An EBS Volume stands for Elastic Block Store.

It's a network drive that you can attach to your instances

while they run,

and we've been using them without even knowing.

So this EBS Volumes allow us to persist data,

even after the instance is terminated.

And so that's the whole purpose,

we can recreate an instance

and mount to the same EBS Volume from before

and we'll get back our data.

That is very helpful.

So these EBS Volumes, at the CCP level,

can only be mounted to one instance at a time, okay?

And when you create an EBS Volume,

it is bound to a specific availability zone.

That means that you cannot have an EBS Volume

in created, for example, us-east-1a

we'll see this in the diagram in a second.

So how do you think of EBS Volumes?

Well, you can think of them as network USB sticks.

So, it's a USB stick that you can take from a computer

and put it in another computer

but you actually don't physically put it in a computer.

It's attached through the network.

The feature gives us 30 GBs of free EBS storage

of type General Purpose or SSD or Magnetic per month.

And in this course, we'll be using this

with the GP2 to GP3 Volumes.

Now let's look at it.

So EBS Volumes are network drivers

that is not a physical drive, okay?

So to communicate between the instance and the EBS Volume,

it will be using the network.

And because the network is used,

there may be a bit of latency from one computer

to reach to another server.

Now, EBS Volumes, because they are a network drive

they can be detached from an EC2 instance

and attached to another one very quickly.

And that's makes it super handy

when you want to do failovers for example.

EBS Volumes are locked to a specific availability zones,

that means that, as I said, if it's created in us-east-1a

it cannot be attached to us-east-1b

but, we will see in this section that if we do a snapshot,

then we are able to move a volume across

from different availability zones.

And finally, it's a volume,

so you have to provision capacity in advance.

So you need to say how many GBs you want in advance

and the IOPS, which is I/O operations per seconds,

and you're basically defining how you want

your EBS Volume to perform.

You're going to get billed for that provision capacity

and you can increase the capacity over time

if you want you to have better performance or more size.

So, as a diagram, how does it look like?

Well, we have us-east-1a with one EC2 instance

and we can attach, for example

one EBS Volume to the EC2 instance.

If we create another EC2 instance,

as I said an EBS Volume can not be attached to two instances

at a time at the Certified Cloud Practitioner level.

And therefore, what I wanna say is that

this other EC2 instance needs to have

its own EBS Volume attached to it,

but it is a very possible for us to have two EBS Volumes

attached to one instance

think of it as two network USB sticks into one machine

that makes a lot of sense.

Now EBS Volumes are linked to an availability zone.

So as we can see, all this diagram has been so far using

us-east-1a.

So if you want it to have other EBS Volumes in an other AZ

then you would need to create this separately

in the other availability zone.

So just same way that's your EC2 instances

are bound to an AZ, so are the EBS Volumes.

Finally, it is possible for us to create EBS Volumes

and leave them unattached

they don't need to be necessarily attached

to an ECG instance, they can be attached on demand

and that makes it very, very powerful.

Finally, when we go ahead and create EBS Volumes

through EC2 instances, there is this thing

called a Deletes on Termination attribute

and this can come up in the exam so,

if you look at this when we create

an EBS Volume in the console, when we create an EC2 instance

there is the second to last column

called Delete on Termination.

And by default, it is ticked for the Root Volume

and not ticked for a new EBS Volume.

So this controls the EBS behavior

when an EC2 instance is being terminated.

So by default, as we can see, the root EBS Volume

is deleted alongside the instance being terminated.

So it's enabled

and the default any other attached EBS Volume is not deleted

because it's disabled by default.

But obviously as we can see in this UI, we can control

if you want to enable or disable delete on termination.

And so use case right, would be for example,

if you want to preserve the root volume,

when an instance is terminated,

for example, to save some data

then you can disable delete on termination

for the root volume, and you'll be good to go

and it could be an exam scenario at the exam.

So I hope you liked it.

And I will see you in the next lecture.

So let's have a look

at the EBS volumes attached to our instance.

So if you click on instance

and then you go to the storage tab in here,

you find that there is a root device

and there's a block device on it.

As you can see, we got one volume

of eight gigabytes currently attached

into our EC2 instance.

So what I can do is I can click on this volume

and it will take me into the volumes interface of AWS.

And we can see that, yes, indeed,

our volume exists and it's there.

It's in use as shown here

and it's attached to an instance right here.

So we have a different kind of console here

and to access it, you can just go on the left hand side

and click on volumes.

So as we can see, now we have one EBS of eight gigabytes

and what I can do is I can create a second volume.

So let me create a volume

and I will have many options to choose from,

GP2, GP3 and so on

but I will just use GP2 of type of size two gigabytes.

And then for availability zone,

I can choose the same one where my EC2 instance is.

So for this, I'm gonna go into my EC2 instance, in here

and I will find which availability zone it is on.

So I scroll down,

and it is going to be in the networking one.

So I scroll down in the networking

and here, availability zone, it says eu-west-1b.

Therefore, the volume I will create

is going to be in eu-west-1b

because the EBS volumes are bound by specific AZ.

So that's good.

I will have it done and create this volume.

And now my volume is created.

And what I can do is if I can click on it,

this one is currently not attached.

Okay, so it's been creating

so let me refresh this to see if it's created.

Okay, it's available and it's not attached yet.

So therefore, because it's available,

what I can do is action

and then I can attach the volume

and we need to find an instance.

So we have one running right here.

And so we're going to attach this volume to my instance,

click on attach volume and voila,

our instance now has two EBS volumes attached to it.

How do we know?

Well, I can refresh this page,

go to storage on my EC2 console, scroll down.

As you can see now for block devices,

I have two block devices.

I have the one of eight gigabytes

and the one of two gigabytes.

To actually use this new block device,

it's a bit more complicated

and out of scope for this course,

but you can go to format EBS volume attach EC2,

and you should find something like, yes,

make an Amazon EBS volume available to use on Linux

and this gives you instructions on how to do it

but again, this is out of scope for this.

So now if I go into my volumes and I create a volume,

I can create a volume of two gigabytes of GP2

but this time the AZ is going to be eu-west-1a

and not eu-west-1b.

So it's gonna be a different AZ

than the one of my EC2 instance.

And the reason I do so is to show you

that right now, we have three GP2 volumes.

So let me refresh this.

So the last one is available and it's a different AZ,

so eu-west-1a.

And if I do actions and then attach volume,

as you can see, I cannot attach it to my EC2 instance

because my EC2 instance is in eu-west-1b.

And so therefore, we can see that the EBS volumes

indeed are bound by a specific availability zone.

Lastly, what I can do is that I can take this volume,

do action, delete volume, and it's gone.

And that really shows you the power of the cloud.

I can just request volumes, delete volumes

right on the go in the matters of seconds.

Okay, so we have our two EBS volumes in here

and what I wanna show you now is a cool behavior.

So what happens if I terminate my instance?

Well remember, and I will show you again,

this one root volume of eight gigabytes

has the delete on termination attribute.

So how do we know?

Well, if I go into my storage

and then go to my block devices, into this table right here,

and scroll all the way right,

you see the first one has delete on termination yes

and the second one no.

So why this one is yes?

Well, I don't know if you remember,

but when you go through the process

of launching an instance, okay?

And then you scroll down to the storage,

in here, if you click on advanced,

you can see the fact

that it is your roots of eight gigabytes

and by default, this delete on termination attribute is yes,

which makes sense, but you could set it to no

if you wanted to keep the root

after terminating your instance.

So this explains why we see from before,

the yes in this table.

And so therefore, if I go ahead and terminate my instance

which I will, so it says successfully terminated

so it's going to really remove it from here.

I can go back into my EBS volumes.

I can refresh them.

And what's going to happen is that this one

soon is going to be available

so because it's going to be detached from my EC2 instance

and then it's going to be terminated.

So I'm going to pause until this is done.

And here we go.

So my eight gigabyte volume has now disappeared.

Only my two gigabyte volume is left

and if I go to my EC2 console,

well, it says that my first instance has been terminated.

So that's it for this lecture.

I hope you liked it

and I will see you in the next lecture.

So now let's talk about EBS Snapshots.

So, an EBS Snapshot is a backup

at any point in time of your EBS volume.

And for this, it's not necessary to detach your EBS volume

from your EC2 instance but it's recommended.

You can copy these EBS Snapshots

across different Availability Zones

or even across different Region.

So, for example,

let's take EC2 instance that has an EBS volume in US-EAST-1A

and an EC2 instance in US-EAST-1B.

So we can take a snapshot of the EBS volume.

Okay, and thanks for that snapshot

we can actually restore it in another AZ.

So this is how you would transfer an EBS volume

from one AZ to another.

Next, you need to know about a few EBS Snapshots feature.

So the first one is called the EBS Snapshot Archive.

It's the ability for you to move the snapshot

to an "archive tier" that is going to be up to 75% cheaper.

So, if you do move this snapshot to an "archive tier"

then it will take you from within 24 to 72 hours

for restoring the archive.

So it's not immediate.

The other thing is to have a Recycle Bin for EBS Snapshots.

So in case you do delete your EBS Snapshots

instead of being permanently deleted

then instead they're going to land in Recycle Bin.

And so the idea with this

is that you can recover them from an accidental deletion.

And the retention for your Recycle Bin can be set

from anywhere between one day to one year.

The last feature you need to know about

for your EBS Snapshots is called the Fast Snapshot Restored.

So this forces a full initialization

of your snapshot to have no latency on the first use.

This is particularly helpful

if your snapshot is big, very big

and need to initialize an EBS volume

or needs to instance out of it very quickly,

but this feature costs a lot of money,

so be careful when using it.

Okay, that's it for this lecture.

I hope you liked it.

And I will see you in the next lecture.

So we have this two gigabyte,

GP2 EBS Volume available to us,

and we can take a snapshot from it.

So if we do Actions, we can Create a snapshot.

So we can add a Description, for example, DemoSnapshots,

and then click on Create snapshots.

So then on the left hand side menu,

instead of Volumes, you can click on Snapshots.

And Snapshots shows you a list

of all the snapshots you have.

And as you can see, we have one right here.

It is Completed.

It is 100% Available.

And we get some information around the snapshot itself.

For first of all, what we can do is that we can Copy

this snapshot into other region.

So if you right click and do Copy Snapshots,

then as you can see, you can copy the snapshot

into any destination region that you want.

And this can come in very handy,

in case you want for example,

to have a Disaster Recovery Strategy,

to make sure data is backed up in another region of AWS.

So I won't do that, I won't do so, but you get the idea.

Another thing I can do is take the Snapshot,

and I can recreate a Volume from it.

So Action, Create volume from snapshots.

And we choose a two gigabytes GP2 Volume.

And then the target AZ doesn't have to remain eu-west-1a,

it can be, for example, eu-west-1b.

And we can also encrypt these volumes if you wanted to

and add some Tags.

And so as we can see, when we click on Create volume,

what's going to happen is that if we go back

into our Volumes,

well, now we have two Volumes, as you can see.

And one of them,

this one was restored through a Snapshots, okay?

And it is an eu-west-1b.

So the idea is that thanks to Snapshots,

we can quote unquote copy EBS volumes

across different Availability Zones.

And that's very handy.

If we look again at Snapshots, we can have a look

at what's called the Recycle Bin.

So the Recycle Bin is a way for you to protect

your EBS Snapshots from accidental deletion,

as well as your Amazon Machine Images.

So we can Create a Retention Rule and name it

DemoRetentionRule.

I will select EBS Snapshots.

I will Apply to all resources and retain them

during one day.

And for Rule Lock Setting, I will leave this unlocked,

so that I can delete this rule whenever I want to.

And then click on Create Retention Rule.

And now on the Resources, we can see if we have Resources

in the Recycle Bin.

So let's go back into our Snapshots in the EC2 Console.

So I'm going to go into EC2.

Here we go, Snapshots.

Little shortcuts.

And what I'm going to do is take the Snapshots,

and first, before I delete it,

I wanna show you the Storage Tiers.

So right now it is a Standard Storage Tier, okay?

But you can move the Storage Tier,

by Archiving a snapshots,

and so I need to move the Storage Tier

into another Pricing Level.

But if you want to restore it,

of course, you will have to wait 24 to 72 hours.

So just to show you.

But anyway, let's go ahead and delete the snapshot.

So we'll delete the Snapshots.

As you can see, it's gone.

And before, it used to completely delete the snapshots,

and you couldn't recover it, okay?

As you can see, it's gone.

But now thanks to the Recycle Bin,

well, if I refresh here my Resources,

I can now see that my Snapshot has appeared here.

And what I can do is click on it and Recover it.

Yes, Recover Resources, and voila, it's back

into my Snapshots on my EC2 console.

Okay, that was pretty awesome, right?

Okay, that's it for EBS Snapshots.

I hope you liked it, and I will see you in the next lecture.

So, now, let's talk about EBS volumes

and their different volume types.

They come in six different types today,

and we can group them in several categories.

The first one is gp2, gp3,

which is a general purpose SSD volume

that will balance price and performance

for a wide variety of workloads, and this is something

we've been using so far in this course.

Then we have io1 and io2 Block Express.

They're highest-performance SSD volumes

that will be used for mission-critical low-latency

and high-throughput workloads.

Then we have st1 volumes,

and they're low cost HDD volume

designed for frequently accessed

throughput intensive workloads.

We have sc1 volume, which are going to be

the lowest cost HDD volume, and it will be designed

for less frequently accessed workloads.

Now, how do you define an EBS volume?

Well, you can have several factors, for example, size,

throughput, and IOPS, which means I/O operations per second,

and, obviously, when in doubt,

always consult the documentation.

Now, for your EC2 instances,

only gp2 and gp3 and io1 and io2

can be used as boot volumes.

That means where the root OS is going to be running.

So, now, let's go do a deeper dive

onto gp2, gp3, io1 io2, and the other ones,

but gp2, the general purpose and the provisioned IOPS

are going to be the most important for your exam.

So gp2 is cost effective storage with low-latency,

and you can use it for system boot volumes,

virtual desktops, development and test environments.

The size can vary between one gigabytes to 16 terabytes,

and so we have differences between gp2 and gp3.

Gp3 is the newer generation of volumes.

So gp3 gives you a baseline of 3000 IOPS

and a throughput of 125 megabytes per second,

and then we can increase IOPS up to 16,000

and throughput up to 1,000 megabytes

per second independently, okay, so they're not linked.

For gp2, this is the older version,

there're small gp2 volumes that can burst up to 3,000 IOPS,

and then the size of the volume and the IOPS are linked.

That means that if you increase the IOPS,

if you increase the number of gigabytes on your volume,

then you're going to get three more IOPS

up to 16,000 IOPS,

and so that means that if you have 5,334 gigabytes,

then you will have 16,000 IOPS, and you'll maxed it out.

So what do you remember from this slide?

You remember that in gp2, gp3,

this is for cost-effective storage latency,

and then gp3, you can independently set the IOPS

and the throughput, whereas for gp2,

they're linked together.

So, now, let's talk about provisioned IOPS volumes.

So they're used for critical business applications

that need to sustain IOPS performance

or applications that need a lot of IOPS,

for example, more than 16,000.

So from an exam perspective,

whenever you see, for example, a database workload

that is very sensitive to storage performance

and consistency, then the provisioned volumes

are going to be great.

So we have the io1 type of volume

between four and 16 terabytes,

and the max IOPS you can provision, so the max PIOPS,

is going to be around 64,000 for natural EC2 instances

and 32,000 for the other kind of instances,

and because we have an io1 type of volume,

we can increase the provisioned IOPS

independently from the storage size.

If we consider the io2 block express type of volume,

you can go up to 64 terabytes of data.

You get sub-millisecond latency,

and you get a lot of max IOPS, such as 256,000

with an IOPS to gigabyte ratio of 1,000 per one.

So this is definitely

a very high performance I/O type of volume,

and on top of this, the provisioned IOPS volumes

that we'll see in the next lectures

support the EBS multi-attach feature.

So, now, let's quickly touch upon st1 and sc1.

So they cannot be a boot volumes.

This is only for the previous types of volumes.

You can get the size up to 16 terabytes,

and we get two kinds of volumes here.

We have the throughput optimized HDD, so st1,

which is great for big data,

data warehousing, and log processing,

which gives you a max throughput of 500 megabytes per second

and a max IOPS of 500,

and then for cold HDD, so sc1, this is for archive data,

so data that is infrequently accessed,

and this is when you would use it

when you need to have the lowest possible cost.

Here, the max throughput is 250 megabytes per second,

and the max IOPS is 250 as well.

Now, you don't have to remember

all these details going into the exam.

You just need to understand the differences

at a high level of all these volumes.

So the general purpose SSD versus the provisioned IOPS SSD,

in case you need a database, versus some st1 and sc1,

in case you need to have high throughput and lowest cost,

and so you can find a summary of all I said

in this link right here, okay,

which is a screenshot I just took you.

So don't need to remember the details again,

but, remember, that if you want to get, also,

over 32,000 IOPS, you need EC2 Nitro with io1 or io2,

and that will be it for this lecture.

So I hope you liked it,

and I will see you in the next lecture.

So now let's talk about

the Multi-Attach feature of the EBS volumes.

So as the name indicates,

the Multi-Attach feature allows you to attach

the same EBS volume to multiple EC2 instances

in the same availability zone.

So what does that mean?

That means that, well,

we have multiple EC2 instances,

and we have an io2 volume

with the Multi-Attach feature enabled.

Then this volume can be attached

to multiple EC2 instances at a time,

which is something that is only available

for the io1 and the io2 family of EBS volumes.

Now, each instance will have

full read and write permissions

to the high-performance volume.

And so that means that they can all

write and read at the same time.

So the use case for this is

you have higher application availability

in case of a clustered Linux application,

for example, using Teradata,

or if your application must manage

concurrent rights operation.

So just so you know,

this Multi-Attach feature is only available

from within a specified availability zone, of course.

It doesn't allow you to attach an EBS volume

from one AZ to another AZ.

Another limitation of Multi-Attach is

that it is up to 16 EC2 instances at a time

that can be attaching the same volume.

And this is something you have to know for the exam,

so be careful to that 16 number.

Finally, for it to work,

you must use a file system

that is going to be cluster-aware.

So it's a different file system than XFS or EX4.

And this is just a little bit more details,

but in case you wanted to use this feature, now you know.

Okay, that's it for this lecture, I hope you liked it.

And then we'll see you in the next lecture.

