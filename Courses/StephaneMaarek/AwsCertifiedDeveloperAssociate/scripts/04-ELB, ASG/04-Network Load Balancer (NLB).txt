So now let's talk about the Network Load Balancer.

So it's a Layer four load balancer, and therefore

it allows you to deal with TCP and UDP traffic.

Okay, this is lower level.

Layer seven was HTTP,

and layer four is going to be TCP and UDP traffic.

So these work for Network load balancer

and therefore when in the exam you see UDP,

think Network load balancer or even TCP.

Okay, also on top of it, the Network load balancer,

is really, really high performance

and therefore it can handle

millions of requests per seconds.

And the latency compared to

the Application load balancer is lessened.

That means you get around a hundred milliseconds

versus 400 millisecond for the ALB.

Now another specificity of the Network low balancer

is that it only has one static IP per availability zones,

and you can assign an Elastic IP to each AZ.

So this is very helpful when you need to

expose your application with a set of static IPs

and this can be Elastic IPs.

So when the exam you say,

"Hey your application can only be accessed

within one, two, or three different IPs".

Then you need to think about

the Network load balancer as an option.

So if you see extreme performance, TCP, or UDP,

or static IPs think Network load balancer.

Now using it is not included in the AWS free tier.

So let's have a look at how that works.

So it works very similarly to the Application load balancer.

We create target groups

and then the Network load balancer will redirect to them.

So we can use, for example, the TCP traffic,

or for example in the backend HTTP,

but still in the front end use TCP.

So what about the target groups?

This is the important parts.

So the target groups can be EC2 instances.

That means that your Network load balancer

can redirect to your EC2 instances

and send TCP or UDP traffic to them

but you can also register IP addresses,

and these IP addresses when they're hardcoded,

and they must be hardcoded,

they must be private IPs.

So why would you do this?

Well, you can, of course send the private IP

of the EC2 instance that you own,

but also you could use the private IP of a server

that you have in your own data center.

And therefore both of them can be fronted

by the same Network load balancer.

And it's also possible for you

to have a Network load balancer

in front of an Application load balancer.

So in that case, the NLB is in front of your ALB.

So why would you do this?

Well, thanks to the Network load balancer,

you would get for example, the fixed IP addresses,

and then thanks to the Application load balancer,

you can get all the rules

that you have around handling HTTP type of traffic.

So it is a valid combination.

Now, one last thing you need to know for the exam,

is that the health checks

performed by the Network load balancer target groups

are support three different kind of protocols.

They support the TCP protocol, the HTTP protocol,

and the HTTPS protocol.

So if your backend application

supports the HTTP or HTTPS protocol,

then it is definitely possible for you

to define a health check on these protocols.

Okay, so that's it for the Network load balancer.

I hope you liked it.

And I will see you in the next lecture.

Okay, so let's go ahead

and practice creating a network load balancer.

So let's create a network load balancer right here,

and we're going to call this one DemoNLB.

And so,

we will choose an internet facing load balancer of IPv4.

In terms of network mapping, I will use the VPC I have,

and I will take every availability zone so the three I have.

And as you can see for each AZ, there's a subnet.

And then there is an IPv4 address that is assigned by AWS.

So that means that for each AZ

that you enable for your network load balancer,

you're going to get a fixed IPv4 address.

And in that case, this is going to be assigned by AWS,

but if you had an elastic IP,

you could use an elastic IP address instead

for each specific availability zones.

Okay, next we can attach a security group

to our network load balancer, and this is recommended.

So this is new.

And the way we do it is

that we can create a security group.

I call this one demo-sg-nlb.

And for inbound rules,

we're going to allow anyone on port 80.

So we'll have HTTP from anywhere,

and outbound rules is fine.

So let's create the security group,

and Demo SG for NLB, we have the description.

So we're good.

We're going to now use this demo security group.

So I'm going to refresh this and choose my demo-sg-nlb,

and remove the default, okay?

So the idea is that similarly to application load balancers,

for network load balancers, you also attach a security group

and then this control traffic to your network load balancer.

In terms of listeners and routing,

we're going to have a protocol.

So you can use TCP, TCP_UDP, TLS, or UDP.

We'll use TCP over port 80.

And then we have a target group we should send it to.

So let's create a target group.

And this one is going to be specifically

for a network load balancer.

And so as such, I'm going to choose instances in here,

and the target name is going to be called demo-tg-nlb.

The protocol is going to be TCP on port 80,

because we're using a network load balancer.

And we'll use the VPC as before.

For the health check, we have different options.

So TCP, HTTP, or HTTPS.

But because we have an HTTP application running

on our EC2 instances, we'll use HTTP.

And for the advanced health check settings,

we'll just define the healthy threshold to be two,

and the timeout to be two seconds,

and the interval to be five seconds.

So let's click on Next,

and then we are going to register targets.

So my two available instances,

I'm going to click here to include them

as pending below, and create the target group.

So now that we have created our demo-tg-nlb,

we can go ahead, click on it,

to have it in a different page.

And I'm gonna go into my network balancer,

and refresh this, and select my demo-tg-nlb.

Perfect.

Now let's scroll down,

and we have done the configuration

of our network load balancer.

So let's create this network load balancer

and switch right away to its page.

Now let's wait for it to be provisioned,

and we're good to go.

Okay, so my network load balancer is now active.

And so if I enter the URL in my web browser,

as we can see right now, it doesn't seem to work.

So let's observe the kind

of problems we may have with our load balancer.

So if you look at the target group right now,

and refresh this page,

it looks like my instances are still in the initial phase

of being checked.

So let me come back and see if they're healthy or unhealthy.

And so they are unhealthy,

because they have checks have failed.

So the idea is that if we look at these instances

and we look at the security group of these instances,

we go to Security, and then Security groups.

So let's click on it,

and open up the security group.

And we can see that from the inbound rules,

that we allow SSH from anywhere

and we allow HTTP from this security group,

which is, if you remember, the security group

of our application load balancer.

But we actually need to allow also HTTP traffic

from our network load balancer.

And so we need to click on demo-sg-nlb.

So allow traffic from NLB.

And this was allow traffic from ALB.

And so the idea is that now with this security group rule,

we allow the NLB

to talk to our EC2 instances in our target group,

and therefore,

they should help with passing the health checks.

So now let's just wait a little bit here

to see if that solves our issue.

And yes, as you can see, now my instances are healthy.

So that means

that if I go into my network load balancer now,

it has resolved automatically, and we refresh,

and we get the fact that we get a Hello World

from a specific IP, which is our instance.

And so after a while and refreshing, the IP changes,

so that proves that we are load balancing to two instances.

And that's it.

So we've seen the security groups

of our network load balancer.

It works similarly to the application load balancer,

and how to change our EC2 security group

to really make sure that we also allow traffic

from the NLB and not only the ALB,

which was right here.

Okay, so that's it for this hands-on.

Now what you can do to prevent having some costs is

just delete the load balancer, the DemoNLB,

and optionally, if you wanted to,

you could delete the demo target group,

right here, for the NLB.

And if you wanted to,

you could delete also the security groups of the NLB.

But I don't think that's necessary,

but it's good practice if you wanted to try it out.

Okay, so that's it for this lecture.

I hope you liked it,

and I will see you in the next lecture.