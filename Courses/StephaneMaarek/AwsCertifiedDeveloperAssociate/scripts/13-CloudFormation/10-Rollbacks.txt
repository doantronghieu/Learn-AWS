So, let's talk about CloudFormation rollbacks.

And they're very important to understand at the exam.

So, if you create a stack

and the stack creation fails,

you have two options.

The first one is the default option,

which is that everything rolls back

and that means gets deleted.

And you can look at the log of your CloudFormation create

to understand what happened and why it failed,

but you cannot look at your resources.

But if one of these resources has a problem

and you want to keep it,

you have the option to disable the rollback

to troubleshoot what happened during your stack creation.

If it is a problem with stack updates,

then automatically, by default,

the stack is automatically going to roll back

to the last previous known working states,

again, deleting anything that was newly created.

And again, you can look in the log to see what happened,

and the error messages.

Now, in case of a rollback failure,

so that means that there's a stack update,

it rolls back,

and during the rollback, there is a failure.

Then, this is a problem with your stack

and you probably had resources that were manually changed.

In that case,

you need to go and fix these resources manually.

And then, through the console,

or through the API,

you can issue what's called a ContinueUpdateRollback

to tell CloudFormation to try rolling back again.

So, either you do it from the console

or an API call

or from the CLI

using the ContinueUpdateRollback API call.

Okay. So, let's practice failures.

So, let's create a stack,

and we'll upload a template file.

And the file I'm going to upload

is called trigger-failure.yaml,

the number two.

So, why is this file problematic?

Well, if you go into trigger-failure.yaml,

you look at the image ID of my EC2 instance.

It is an image ID that does not exist,

so therefore, it's going to create a failure.

So, let's click on Next.

And I'll call this one TriggerCreationFailure.

Click on Next.

And here, under Stack failure options,

we have two options.

Number one is to roll back all stack resources.

That means that they're going to be rolled back

to the previous known stable states,

or we can preserve successfully provisioned resources.

And this will keep the successfully provisioned resources

and roll back any failed resources

to the last known stable states.

So, if we do this, which is the non default option,

and then we click on Next,

and then Submit,

as you can see,

we generate an SSH security group

and we generate a server security group.

And so, as you can see,

I need to-

First of all,

there's one problem

that I didn't provide the group description.

So, it's a good example of the failure of this.

So, as you can see,

even though my server security group

was not able to be created,

my SSH security group

was able to be created.

And if I go into Resources,

well one is still being kept.

Whereas, if you had a creation and by default it would fail,

it would delete everything.

So, this could be the occasion

to just troubleshoot if you needed to.

But of course, because this leaves some remainders,

you need to absolutely delete the stack to get rid of it.

So, you cannot update the stack and fix things.

So, we will delete it.

And now, it's gone.

So, this is showing you the option

of what it is

when there is a create failure,

and you can do the exact same thing.

So, you can create a stack right now.

I'll create a stack

based on the correct template

called just-ec2.yaml.

And I'll call it

FailureOnUpdate.

So, right now, we're good.

We know that this is going to work

because, well, this is the template we've used from before.

So, let's wait for things to be created.

And as we can see, we're good.

So, I'm going to update my stack.

And if you don't see this button,

just refresh your page.

So, update my stack,

but this time, I will replace the template

with the template file named trigger failure.

So, this time we'll have a group description

called hello.

Next...

And here we have, again, the option

to roll back all stack resources

or to preserve successfully provisioned resources.

So, where now we say roll back everything

and see what happens

and then we'll do the second option right after.

So, let's click on Next.

And then click on Submit.

So, this is going to create a few security groups,

and then, it's going to trigger a rollback.

So, my security groups right now are being created.

Now they're done.

And as you can see,

the instance get created,

but then there was an update failed

because, well, the invalid AMI was not found.

So therefore, what's going to happen?

Well, because we have specified everything to roll back,

then everything is going to roll back

based on the last known state.

And so, that means that my server security group

and SSH security groups

should disappear.

So, let's wait for these events to happen.

And as you can see right now,

my SSH security group and server security group

get deleted.

And similarly, as an exercise,

if you update the stack,

but this time you choose, again, the trigger failure

and we just enter description again,

and then the stack failure option,

we just say preserve successfully provisioned resources,

then you know what happens.

You can try it out on your own.

This would create SSH and server security groups,

but it would not roll them back

in case there is a rollback happening,

a stack failure.

So, this is up to you to choose what you want,

but both the behaviors can be desirable

based on what you're trying to do.

So, when you're done,

please go ahead and delete the stack

and you'll be good.

All right. That's it.

I hope you liked it.

And I will see you in the next lecture.