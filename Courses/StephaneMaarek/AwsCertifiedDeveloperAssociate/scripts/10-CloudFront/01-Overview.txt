Now let's talk about CloudFront.

CloudFront is a content delivery network, or CDN,

so anytime you see CDN at the exam, think CloudFront.

It improves the read performance

by caching the content of your website

at the different edge locations.

And because your content is cached all around the world,

then your users all around the world

will have a lower latency,

and this will improve the user experience.

CloudFront is made of 216 points of presence globally,

which correspond to the AWS edge locations around the world.

And AWS keeps on adding locations

to improve user experience even further everywhere.

On top of it, by having the content distributed globally

we are getting DDoS protection.

So DDoS is a sort of attack

where all your servers around the world

are getting attacked at the same time,

we'll see this later on in this course,

and the idea is that CloudFront

because your application is worldwide,

then you're protected against these attacks,

also using something called Shield

and Web Application Firewall,

that we will be seeing in the security section.

So if we wanted to look at a map of the world,

these are the map and we see some edge locations

as well at edge caches.

And so say we had created an S3 bucket and a website

on our S3 bucket in Australia,

but we had a user maybe in America,

then what the user will do

is that it will request the content

from an American edge location using CloudFront,

and CloudFront will be able

to fetch the content from Australia.

Now, if another user in the US

will be requesting the same content,

then it will be served directly from the edge

and it will not go all the way

to Australia to serve that content.

Same if a user is in China,

then it will be talking to a Chinese point of presence

and then redirected to the S3 bucket,

and then the content will be cached at the edge.

CloudFront has several type of origins.

For example, you have S3 bucket,

which is used to distribute files

and cache them at the edge using CloudFront.

And to guarantee that only CloudFront

can access your S3 bucket,

you can use something called the Origin Access Control, OAC,

which is replacing the older Origin Access identity, OAI.

CloudFront can also be used as a way

to send data into an S3 bucket.

So to upload data to file to S3,

which is called an ingress.

You can have CloudFront as well instead

in front of any custom origin HTTP backend.

So that could be an Application Load Balancer,

that could be an EC2 instance,

and the S3 website,

but first you must enable the bucket as a static S3 website,

or really any HTTP backend you want.

So at a high level, how does CloudFront work?

We have the edge location all around the world, okay?

And then it will be connecting to your origin.

So would it be an S3 bucket or an HTTP server?

And when the client connects

and does an HTTP request into your edge location,

then the edge location will see

if it has it in the cache.

If it doesn't have it in the cache,

then it will go to the origin to get the request results.

And then once you retrieve the results,

it will be caching it into a local cache

so that if another client requests the same content

from the same edge location,

then the edge location does not

need to go to the origin.

So if we have S3 as an origin,

then if we look at the cloud,

your S3 bucket is your origin in some region,

and then you have edge locations all around the world,

for example, at Los Angeles.

And your users accessing the edge location in Los Angeles

will get their content directly served

through the edge location,

but first the edge location

will get it from the origin S3 bucket

through the private network.

And the S3 bucket will be secured

using an Origin Access Control

and by modifying the S3 bucket policy on the S3 bucket.

So this is the same when we have a user

in Sao Paulo, for example, in Brazil.

Again, this will be another edge location

which will be serving users close to Brazil,

and then it will be a private connection

between your edge location

and your S3 bucket, and so on.

So using CloudFront and the edge locations,

we can see that the content of our S3 bucket in one region

can be distributed all around the world

through the edge locations or points of presence.

So one question that's common

is what is the difference between CloudFront

and something like S3 Replication?

Well, if you have CloudFront,

you're using the Global Edge network,

so this is about 216 points of presence,

and the files are going to be cached

in each edge location, maybe for a day.

So this is amazing if you have static content

that must be able to be available

everywhere around the world.

S3 Cross-Region Replication is different,

it must be set up for each region

you want replication to happen,

so this is not for every region in the world.

And then files are going to be updated in near real-time,

so there's no caching that happens.

And it is only for read only,

and so this is great if you have dynamic content

that needs to change all the time

and be available at low-latency in a few regions.

So they serve very different purposes,

CloudFront is a CDN,

which is to cache content all around the world,

whereas S3 Cross-Region Replication

is to really replicate an entire bucket into another region.

So hopefully that makes sense about CloudFront.

In the next lecture, we'll have a play

and see how we can set up a CloudFront distribution

on the cloud for an S3 bucket.

So I will see you in the next lecture.

So, let's go and practice using CloudFront

but first we have to create an S3 bucket

to hold our files for our distribution.

So, let's create a bucket

and I'll call this one demo-cloudFront-stephane-V4,

and it will scroll down, leave everything

as the default and click on Create bucket.

Okay, so my bucket is now created

and I'm going to upload some files in it.

So, let me add files and I will choose my three files,

beach, coffee, and index.html.

So, let's upload them and now they've been uploaded.

So, if I go in my bucket, we can see all of them,

and as a reminder, if I go on index.html,

I have two ways of open it.

The first one is to use the object URL, but if I try it,

I get an access denied because my object is not public.

And if I go and click on Open here,

this generates a pre-signed,

so let's allow pop-ups,

this generates a pre-signed URL for my S3 object,

which allows me to access the object,

so I see I love coffee and Hello World

but I still don't see the image

because the image itself is not public.

So, let's see how we can instead use CloudFront

to make these files accessible without making them public.

So, let's open up the CloudFront console,

and as you can see on the top right corner

it is a global service because, well,

CloudFront is a global distribution

so there's no region selection.

We next have to choose an origin domain.

So, as you can see, I get my Amazon S3 buckets,

or my elastic load balancer or whatever.

So, if I choose my buckets,

I could choose my demo CloudFront bucket,

clicking out on here.

But here you can enter really any domain name you want

including custom HTTP origins, this is fine.

So, then the origin access.

How do you access the identity?

Well, because this is Amazon S3, we have multiple ways,

we have public, which is that

the bucket itself must be public

but this is not the case for us.

Then, we have Origin access control, which is OAC.

That's the recommended way we'll be using it,

and here it was OAI, it was the previous way of doing it,

but now we're going to use the new way

called OAC, Origin access Control.

So, we need to create an origin access control.

So, to do so, let's click on Create control setting

and it just gives us a name for it.

So, this is good, and let's click on Create.

So, now this has been created and we will have

to update the S3 bucket policy.

So, that's so that CloudFront can access our S3 buckets

because if you go right now in here

and look at our bucket itself under Permissions,

and scroll down, the bucket policy is currently empty,

and so CloudFront will not be able to access it.

So, right now we'll leave it as is.

I'm going to scroll down and skip many different settings.

For WAF, we're going to just disable

the security protections because we don't need them.

And lastly, the one thing we have to do

is the default root object is index.html.

Okay, so everything looks good.

Let's create our distribution,

and our distribution can take some time to be created.

As you can see here,

the S3 bucket policy needs to be updated.

So, I can click on copy policy here,

and there is a shortcut from here

to go straight to your bucket policy settings.

So, page, so here we go, we have it.

Now, let's click on Edit,

and we're going to paste the policy we just printed.

And by the way, if you somehow lose access to this policy,

you can go under Origins, then in here in Origins,

you click on Edits, you scroll down,

and here you will find the policy statement

to copy and paste here.

So, if you look at this bucket policy now,

we allow the platform service to do get object

on any file in our bucket,

as long as the platform distribution,

So this is a condition, is the one we created.

So, this basically allows our distribution

to access S3 buckets.

This is good, this was generated by AWS.

We don't to do anything besides this.

So, the permissions are now correct.

So, back in CloudFront, let's cancel this,

and we go to our distribution,

and we have to wait until it becomes deployed.

My CloudFront distribution is now ready,

so I'm going to copy the domain name, open a new tab.

And as you can see now I get

I love Coffee, Hello World, and my image.

So, you can go to /coffee.jpeg

and of course this will work, and you can go to /beach.jpeg,

and this will work as well.

But the cool thing about it

is that now if I refresh this page,

this is served actually from the platform cache,

and not from the S3 bucket itself because,

well, I requested the file once,

so now they are automatically sent by CloudFront,

as you can see, the loading is much quicker.

And again, if I go to index.html,

this is served from the cache.

So, this is the beauty of CloudFront.

Now, we've done one request

against Amazon S3 through CloudFront

and then the rest is cached on the distribution itself.

So, if I go back now to CloudFront, on the left hand side,

just to show you, you have the origin access,

and this is where you will find your origin access controls.

And we can see that this one was created,

and is active right now,

and is assigned to this distribution.

So, okay, that's it.

We've seen how CloudFront works.

I hope you liked it and I will see you in the next lecture.

